// Code generated by ./cmd/ch-gen-int, DO NOT EDIT.

package proto

import (
	"github.com/go-faster/errors"
)

// ColUInt8 represents UInt8 column.
type ColUInt8 []uint8

// Compile-time assertions for ColUInt8.
var (
	_ Input  = ColUInt8{}
	_ Result = (*ColUInt8)(nil)
)

// Type returns ColumnType of UInt8.
func (ColUInt8) Type() ColumnType {
	return ColumnTypeUInt8
}

// Rows returns count of rows in column.
func (c ColUInt8) Rows() int {
	return len(c)
}

// Reset resets data in row, preserving capacity for efficiency.
func (c *ColUInt8) Reset() {
	*c = (*c)[:0]
}

// EncodeColumn encodes UInt8 rows to *Buffer.
func (c ColUInt8) EncodeColumn(b *Buffer) {
	for _, v := range c {
		b.PutUInt8(v)
	}
}

// DecodeColumn decodes UInt8 rows from *Reader.
func (c *ColUInt8) DecodeColumn(r *Reader, rows int) error {
	data, err := r.ReadRaw(rows)
	if err != nil {
		return errors.Wrap(err, "read")
	}
	*c = append(*c, data...)
	return nil
}
