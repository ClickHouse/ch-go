// Code generated by "enumer -type ServerCode -trimprefix Server -output server_code_gen.go"; DO NOT EDIT.

package proto

import (
	"fmt"
	"strings"
)

const _ServerCodeName = "HelloDataExceptionProgressPongEOFProfileTotalsExtremesTablesStatusLog"

var _ServerCodeIndex = [...]uint8{0, 5, 9, 18, 26, 30, 33, 40, 46, 54, 66, 69}

const _ServerCodeLowerName = "hellodataexceptionprogresspongeofprofiletotalsextremestablesstatuslog"

func (i ServerCode) String() string {
	if i >= ServerCode(len(_ServerCodeIndex)-1) {
		return fmt.Sprintf("ServerCode(%d)", i)
	}
	return _ServerCodeName[_ServerCodeIndex[i]:_ServerCodeIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _ServerCodeNoOp() {
	var x [1]struct{}
	_ = x[ServerHello-(0)]
	_ = x[ServerData-(1)]
	_ = x[ServerException-(2)]
	_ = x[ServerProgress-(3)]
	_ = x[ServerPong-(4)]
	_ = x[ServerEOF-(5)]
	_ = x[ServerProfile-(6)]
	_ = x[ServerTotals-(7)]
	_ = x[ServerExtremes-(8)]
	_ = x[ServerTablesStatus-(9)]
	_ = x[ServerLog-(10)]
}

var _ServerCodeValues = []ServerCode{ServerHello, ServerData, ServerException, ServerProgress, ServerPong, ServerEOF, ServerProfile, ServerTotals, ServerExtremes, ServerTablesStatus, ServerLog}

var _ServerCodeNameToValueMap = map[string]ServerCode{
	_ServerCodeName[0:5]:        ServerHello,
	_ServerCodeLowerName[0:5]:   ServerHello,
	_ServerCodeName[5:9]:        ServerData,
	_ServerCodeLowerName[5:9]:   ServerData,
	_ServerCodeName[9:18]:       ServerException,
	_ServerCodeLowerName[9:18]:  ServerException,
	_ServerCodeName[18:26]:      ServerProgress,
	_ServerCodeLowerName[18:26]: ServerProgress,
	_ServerCodeName[26:30]:      ServerPong,
	_ServerCodeLowerName[26:30]: ServerPong,
	_ServerCodeName[30:33]:      ServerEOF,
	_ServerCodeLowerName[30:33]: ServerEOF,
	_ServerCodeName[33:40]:      ServerProfile,
	_ServerCodeLowerName[33:40]: ServerProfile,
	_ServerCodeName[40:46]:      ServerTotals,
	_ServerCodeLowerName[40:46]: ServerTotals,
	_ServerCodeName[46:54]:      ServerExtremes,
	_ServerCodeLowerName[46:54]: ServerExtremes,
	_ServerCodeName[54:66]:      ServerTablesStatus,
	_ServerCodeLowerName[54:66]: ServerTablesStatus,
	_ServerCodeName[66:69]:      ServerLog,
	_ServerCodeLowerName[66:69]: ServerLog,
}

var _ServerCodeNames = []string{
	_ServerCodeName[0:5],
	_ServerCodeName[5:9],
	_ServerCodeName[9:18],
	_ServerCodeName[18:26],
	_ServerCodeName[26:30],
	_ServerCodeName[30:33],
	_ServerCodeName[33:40],
	_ServerCodeName[40:46],
	_ServerCodeName[46:54],
	_ServerCodeName[54:66],
	_ServerCodeName[66:69],
}

// ServerCodeString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func ServerCodeString(s string) (ServerCode, error) {
	if val, ok := _ServerCodeNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _ServerCodeNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to ServerCode values", s)
}

// ServerCodeValues returns all values of the enum
func ServerCodeValues() []ServerCode {
	return _ServerCodeValues
}

// ServerCodeStrings returns a slice of all String values of the enum
func ServerCodeStrings() []string {
	strs := make([]string, len(_ServerCodeNames))
	copy(strs, _ServerCodeNames)
	return strs
}

// IsAServerCode returns "true" if the value is listed in the enum definition. "false" otherwise
func (i ServerCode) IsAServerCode() bool {
	for _, v := range _ServerCodeValues {
		if i == v {
			return true
		}
	}
	return false
}
