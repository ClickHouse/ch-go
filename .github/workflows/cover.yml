name: cover

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  run:
    runs-on: ubuntu-latest
    env:
      CH_VER: 21.12.2.17-stable
    steps:
      - name: Set up ClickHouse cache
        uses: actions/cache@v2.1.7
        with:
          path: /opt/ch/clickhouse
          key: ClickHouse-${{ env.CH_VER }}

      - name: Check ClickHouse
        id: "ch_exists"
        uses: andstor/file-existence-action@v1
        with:
          files: /opt/ch/clickhouse

      - name: Get ClickHouse asset version
        id: asset
        run: echo "::set-output name=version::$(echo '${{ env.CH_VER }}' | cut -f1 -d'-')"

      - name: Download ClickHouse
        if: steps.ch_exists.outputs.files_exists != 'true'
        run: wget -O /tmp/static.tgz "https://github.com/ClickHouse/ClickHouse/releases/download/v${{ env.CH_VER }}/clickhouse-common-static-${{ steps.asset.outputs.version }}.tgz"

      - name: Install ClickHouse
        if: steps.ch_exists.outputs.files_exists != 'true'
        run: mkdir /opt/ch && tar -C /opt/ch -v --strip-components 4 --extract --file /tmp/static.tgz --wildcards "*/bin/clickhouse" && rm /tmp/static.tgz

      - name: Install Go
        uses: actions/setup-go@v2.2.0
        with:
          go-version: 1.17

      - name: Get Go environment
        id: go-env
        run: |
          echo "::set-output name=cache::$(go env GOCACHE)"
          echo "::set-output name=modcache::$(go env GOMODCACHE)"

      - name: Set up cache
        uses: actions/cache@v2.1.7
        with:
          path: |
            ${{ steps.go-env.outputs.cache }}
            ${{ steps.go-env.outputs.modcache }}
          key: e2e-${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            e2e-${{ runner.os }}-go-

      - name: Checkout code
        uses: actions/checkout@v2.4.0

      - name: Run tests with coverage
        run: make coverage
        env:
          CH_BIN: "/opt/ch/clickhouse"
          CH_E2E: "TRUE"

      - name: Upload artifact
        uses: actions/upload-artifact@v2.3.1
        with:
          name: coverage
          path: profile.out
          if-no-files-found: error
          retention-days: 1

      - name: Send coverage
        uses: codecov/codecov-action@v2.1.0
        with:
          file: profile.out

  send:
    runs-on: ubuntu-latest
    needs:
      - run
    steps:
      - name: Checkout code
        uses: actions/checkout@v2.4.0

      - name: Download artifact
        uses: actions/download-artifact@v2.1.0
        with:
          name: coverage

      - name: Send coverage
        uses: codecov/codecov-action@v2.1.0
        with:
          file: profile.out
