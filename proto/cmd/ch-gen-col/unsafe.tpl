{{- /*gotype: github.com/go-faster/ch/proto/cmd/ch-gen-col.Variant*/ -}}
//go:build amd64 && !nounsafe
// Code generated by ./cmd/ch-gen-int, DO NOT EDIT.

package proto

import (
	"unsafe"
	"reflect"

	"github.com/go-faster/errors"
)

// DecodeColumn decodes {{ .Name }} rows from *Reader.
func (c *{{ .Type }}) DecodeColumn(r *Reader, rows int) error {
  if rows == 0 {
	return nil
  }
  *c = append(*c, make([]{{ .ElemType }}, rows)...)
  s := *(*reflect.SliceHeader)(unsafe.Pointer(c))
  {{- if not .SingleByte }}
  s.Len *= {{ .Bytes }}
  s.Cap *= {{ .Bytes }}
  {{- end }}
  dst := *(*[]byte)(unsafe.Pointer(&s))
  if err := r.ReadFull(dst); err != nil {
  	return errors.Wrap(err, "read full")
  }
  return nil
}
